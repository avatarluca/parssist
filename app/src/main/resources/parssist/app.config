LEXER.INIT.INPUT.DIR=definition/lexer/input.lex
LEXER.TOKENTABLE.OUTPUT.DIR=definition/lexer/tokentable.txt
LEXER.INIT.INPUT.IGNORE=^%( *\"(.*)\" *,)*( *\"(.*)\" *)
LEXER.INIT.INPUT.IGNORE.TOKENNAME=IGNORE
LEXER.INIT.INPUT.COMMENT=^#
LEXER.INIT.INPUT.TOKENMAP=^([a-zA-Z0-9_]*)( *:= *)\"(.*)\"
LEXER.INIT.INPUT.ROWSPLIT=\n
LEXER.ERROR.CURSOR=Invalid token at 
LEXER.REGEX.STARTSYMBOL=^
LEXER.REGEX.ENDSYMBOL=$
LEXER.TOKENTABLE.TITLE1=\n======Tokentype lex list========================================================\n
LEXER.TOKENTABLE.TITLE2=\n======Tokens with ignorables====================================================\n
LEXER.EMPTY_SYMBOL=EMPTY_SYMBOL
LEXER.TERMINAL=TERMINAL
LEXER.NONTERMINAL=NONTERMINAL


GRAMMAR.TOKEN.VOCABULARY_ASSIGNMENT=VOCABULARY_ASSIGNMENT
GRAMMAR.TOKEN.ALPHABET_ASSIGNMENT=ALPHABET_ASSIGNMENT
GRAMMAR.TOKEN.STARTSYMBOL_ASSIGNMENT=STARTSYMBOL_ASSIGNMENT
GRAMMAR.TOKEN.SET=SET
GRAMMAR.TOKEN.NONTERMINAL=NONTERMINAL
GRAMMAR.TOKEN.PRODUCTION_SYMBOL=PRODUCTION_SYMBOL
GRAMMAR.TOKEN.PRODUCTION_OR=PRODUCTION_OR
GRAMMAR.TOKEN.PRODUCTION_RULE=PRODUCTION_RULE
GRAMMAR.TOKEN.EMPTY_SYMBOL=EMPTY_SYMBOL
GRAMMAR.TOKEN.ERROR.VOCABULARY_ASSIGNMENT=Illegal vocabulary assignment
GRAMMAR.TOKEN.ERROR.ALPHABET_ASSIGNMENT=Illegal alphabet assignment
GRAMMAR.TOKEN.ERROR.STARTSYMBOL_ASSIGNMENT=Illegal startsymbol assignment
GRAMMAR.TOKEN.ERROR.PRODUCTION_RULE=Illegal productionrule assignment
GRAMMAR.TOKEN.PRODUCTIONSYMBOLS.REGEX=^((\\-> *)|(\\| *))

PARSER.INIT.INPUT.DIR=definition/grammar/input.gra


NONREC.PARSER.ERROR.EMPTY_SYMBOL=Empty Symbol
NONREC.PARSER.ERROR.INVALID_TOKEN=Invalid Token
NONREC.PARSER.ERROR.PREPROCESSED=To create a parsetable the grammar should be preprocessed
NONREC.PARSER.ERROR.NO_LL1_GRAMMAR=Grammar is no LL1
NONREC.PARSER.ERROR.NO_PRODUCTION=No next production
NONREC.PARSER.TEMPLATE.PATH=parssist/nrdparser/
NONREC.PARSER.TEMPLATE.NAME=template
NONREC.PARSER.TEMPLATE.EXTENSION=.txt
NONREC.PARSER.TEMPLATE.OPENTOKEN={{
NONREC.PARSER.TEMPLATE.CLOSETOKEN=}}
NONREC.PARSER.TEMPLATE.INIT.PARSETABLE=init_parsetable
NONREC.PARSER.TEMPLATE.INIT.TOKENTYPES=init_tokentypes
NONREC.PARSER.TEMPLATE.INIT.ALPHABET=init_alphabet
NONREC.PARSER.TEMPLATE.INIT.VOCABULARY=init_vocabulary
NONREC.PARSER.TEMPLATE.CLASSNAME=parser_name
NONREC.PARSER.TEMPLATE.PACKAGENAME=package_name
NONREC.PARSER.TEMPLATE.PARSETABLESIZEY=parsetable_y_size
NONREC.PARSER.TEMPLATE.PARSETABLESIZEX=parsetable_x_size
NONREC.PARSER.TEMPLATE.STARTSYMBOLNAME=start_symbol_name
NONREC.PARSER.TEMPLATE.STARTSYMBOLREGEX=start_symbol_regex
NONREC.PARSER.TEMPLATE.STARTSYMBOLVALUE=start_symbol_value
NONREC.PARSER.GRAMMARGENERATOR.INIT.INPUT.DIR=generator/nrdparser/lexer/grammar.lex


GRAMMAR.ERROR.INVALID_SYMBOL=String is not a symbol